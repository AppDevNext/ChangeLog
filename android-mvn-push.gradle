apply plugin: 'maven'
apply plugin: 'signing'

afterEvaluate { project ->
    def android_manifest = new XmlParser(false, false).parseText(new File(project.projectDir, 'src/main/AndroidManifest.xml').getText())
    project.version = android_manifest.'@android:versionName'
    project.group = android_manifest.'@package'

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.artifactId = project.pom.artifactId

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                pom.project {
                    name project.pom.name
                    packaging 'aar'
                    description project.pom.description
                    url project.pom.url

                    scm {
                        url project.pom.scmUrl
                        connection project.pom.scmConnection
                        developerConnection project.pom.scmDevConnection
                    }

                    licenses {
                        license {
                            name project.pom.licenseName
                            url project.pom.licenseUrl
                            distribution project.pom.licenseDist
                        }
                    }

                    developers {
                        developer {
                            id project.pom.developerId
                            name project.pom.developerName
                        }
                    }
                }
            }
        }
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.allJava
    }

    task androidJavadocsJar(type: Jar) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.allSource
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}
